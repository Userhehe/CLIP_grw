<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.clip.gwr.model.mapper.ApprovalDaoImpl">


	<!-- 내가 요청한 결재내역 전체 조회 (세션에서 나의 사원번호 사용)-->
	<select id="getAllApproval" resultType="ApprovalVo" parameterType="java.lang.String">
     	SELECT
		    a.APP_SEQ, a.APP_TITLE, a.APP_CONTENT,
		    TO_CHAR(a.APP_CREATEDATE, 'YYYY"년"MM"월"DD"일"') AS APP_CREATEDATE , a.APP_ENDDATE,
		    a.APP_MODDATE, g.GIAN_NAME AS GIAN_SEQ, a.APP_DRAFT,
		    (
		        CASE
		        	WHEN a.APP_DRAFT = '결재취소' THEN '결재취소'
		        	WHEN a.APP_DRAFT = '결재반려' THEN '결재반려'
            		WHEN a.APP_DRAFT = '결재완료' THEN '결재완료'
		            WHEN p.pay_num IS NOT NULL THEN
		                CASE
		                    WHEN p.pay_num = 1 THEN '1차 승인중'
		                    WHEN p.pay_num = 2 THEN '2차 승인중'
		                    ELSE TO_CHAR(p.pay_num) || '차 승인중'
		                END
		            ELSE '결재완료'
		        END
		    ) AS PAY_NUM
		FROM
		    approval a
		JOIN
		    gian g ON g.GIAN_SEQ = a.GIAN_SEQ
		LEFT JOIN (
		    SELECT
		        app_seq,
		        MIN(pay_num) AS pay_num
		    FROM
		        paymentline
		    WHERE
		        pay_sign = 'N'
		    GROUP BY
		        app_seq
		) p ON p.app_seq = a.app_seq
		JOIN
		    approval a2 ON a2.APP_SEQ = a.APP_SEQ
		WHERE
		    a2.USER_ID = #{user_id} AND a.APP_DRAFT != '임시저장'
		ORDER BY
    		APP_CREATEDATE DESC
	</select>
	

		<!-- 내가/내팀이 참조된 결재내역 전체 조회 (세션에서 나의 사원번호 사용)-->		
		<select id="selectReferApproval" resultType="ApprovalVo" parameterType="java.lang.String">
			SELECT a.APP_SEQ ,a.APP_TITLE , g.GIAN_NAME  AS GIAN_SEQ  ,TO_CHAR(a.APP_CREATEDATE, 'YYYY"년"MM"월"DD"일"') AS APP_CREATEDATE ,a.APP_DRAFT ,r.REF_USER  ,r.REF_TEAM  
			FROM APPROVAL a 
			JOIN GIAN g ON a.GIAN_SEQ = g.GIAN_SEQ 
			JOIN REFERENCE r ON a.APP_SEQ = r.APP_SEQ
			WHERE r.REF_USER = #{user_id} AND APP_DRAFT = '결재완료'
			ORDER BY a.APP_CREATEDATE DESC
		</select>
	
	<!-- 나의 결재승인을 받아야하는 결재 리스트조회 (세션에서 사원번호 사용) -->
	<select id="getMyPaycheck" resultType="ApprovalVo" parameterType="java.lang.String">
		SELECT 
		    a.APP_SEQ,  
		    a.APP_TITLE, 
		    a.APP_DRAFT, 
		    p.PAY_NUM, 
		    p.PAY_USER, 
		    p.PAY_REJECTREASON, 
		    g.GIAN_NAME AS GIAN_SEQ,  
		    TO_CHAR(a.APP_CREATEDATE, 'YYYY"년"MM"월"DD"일"') AS APP_CREATEDATE 
		FROM 
		    APPROVAL a 
		JOIN 
		    GIAN g ON g.GIAN_SEQ = a.GIAN_SEQ 
		JOIN 
		    PAYMENTLINE p ON p.APP_SEQ = a.APP_SEQ 
		JOIN 
		    (SELECT 
		         APP_SEQ, 
		         MIN(PAY_NUM) AS MIN_PAY_NUM 
		     FROM 
		         PAYMENTLINE 
		     WHERE 
		         PAY_SIGN = 'N' 
		     GROUP BY 
		         APP_SEQ) pp ON p.APP_SEQ = pp.APP_SEQ AND p.PAY_NUM = pp.MIN_PAY_NUM
		WHERE 
		    a.APP_DRAFT IN ('결재대기', '결재진행') 
		    AND p.PAY_SIGN = 'N' 
		    AND p.PAY_USER = #{user_id}
		ORDER BY 
		    a.APP_CREATEDATE DESC
	</select>
	
	<!-- 나의 결재를 승인을 받아야하는 결재 상세보기  -->
	<select id="oneMyPaycheck" resultType="ApprovalVo" parameterType="java.lang.String">
		SELECT a.APP_SEQ ,a.USER_ID ,a.APP_CONTENT, a.APP_DRAFT ,p.MIN_PAY_NUM, pl.PAY_USER , 
				pl.PAY_SIGN , MIN_PAY_NUM AS PAY_NUM , pl.PAY_REJECTREASON  , pl.PAY_ASIGNDATE 
		FROM APPROVAL a
		JOIN (
		    SELECT APP_SEQ, MIN(PAY_NUM) AS MIN_PAY_NUM
		    FROM PAYMENTLINE
		    WHERE PAY_SIGN = 'N'
		    GROUP BY APP_SEQ
		) p ON a.APP_SEQ = p.APP_SEQ  
		JOIN PAYMENTLINE pl ON pl.APP_SEQ = p.APP_SEQ AND pl.PAY_NUM = p.MIN_PAY_NUM
		WHERE  a.APP_SEQ = #{app_seq} AND p.MIN_PAY_NUM IS NOT NULL
	</select>
	
	<!-- 내가 반려했던 결재 상세보기  -->
	<select id="oneMyPayPause" resultType="ApprovalVo" parameterType="java.lang.String">
		SELECT a.APP_CONTENT, p.MIN_PAY_NUM, p.PAY_REJECTREASON, a.APP_SEQ 
		FROM APPROVAL a
		JOIN (
		    SELECT APP_SEQ, MIN(PAY_NUM) AS MIN_PAY_NUM, PAY_REJECTREASON
		    FROM PAYMENTLINE
		    WHERE PAY_SIGN = 'D'
		    GROUP BY APP_SEQ, PAY_REJECTREASON 
		) p ON a.APP_SEQ = p.APP_SEQ  
		WHERE a.APP_SEQ = #{app_seq} AND p.MIN_PAY_NUM IS NOT NULL
	</select>
	
	
	<!-- 내가 승인한거 조회하는 쿼~~~~~~~~~~~리  -->
	<select id="oneMyPaychecked" resultType="ApprovalVo" parameterType="java.lang.String">
		SELECT 
		    a.APP_SEQ, 
		    a.APP_TITLE, 
		    a.APP_DRAFT,  a.APP_CONTENT  ,
		    g.GIAN_NAME AS GIAN_SEQ ,  TO_CHAR(a.APP_CREATEDATE, 'YYYY"년"MM"월"DD"일"') AS APP_CREATEDATE 
		FROM APPROVAL a 
		JOIN GIAN g ON g.GIAN_SEQ = a.GIAN_SEQ 
		JOIN PAYMENTLINE p ON p.APP_SEQ = a.APP_SEQ
		WHERE a.APP_DRAFT IN ('결재진행','결재완료')
		AND p.PAY_SIGN = 'Y' 
		AND p.PAY_USER  = #{user_id}
		AND p.APP_SEQ =  #{app_seq}
		ORDER BY p.PAY_ASIGNDATE DESC
	</select>
	
	<!-- 나의 결재승인을 받아야하는 결재 아직 미처리한 리스트조회 (세션에서 사원번호 사용) -->
	<select id="getMyUnprocessedPaycheck" resultType="ApprovalVo" parameterType="java.lang.String">
		SELECT  
		    a.APP_SEQ, 
		    a.APP_TITLE, 
		    a.APP_DRAFT, 
		    g.GIAN_NAME AS GIAN_SEQ ,  TO_CHAR(a.APP_CREATEDATE, 'YYYY"년"MM"월"DD"일"') AS APP_CREATEDATE	
		FROM APPROVAL a 
		JOIN GIAN g ON g.GIAN_SEQ = a.GIAN_SEQ 
		JOIN PAYMENTLINE p ON p.APP_SEQ = a.APP_SEQ
		WHERE a.APP_DRAFT IN ('결재진행','결재완료')
		AND p.PAY_SIGN IN ('Y','N')
		AND p.PAY_USER =  #{user_id}
		ORDER BY p.PAY_ASIGNDATE DESC
	</select>
	
	<!-- 나의 결재승인을 받아야하는 결재 내가 반려한 결재 리스트 조회 -->
   <select id="getMyRejectPay" resultType="ApprovalVo" parameterType="java.lang.String">
     SELECT 
		    a.APP_SEQ, 
		    a.APP_TITLE, 
		    a.APP_DRAFT, 
		    g.GIAN_NAME AS GIAN_SEQ ,  TO_CHAR(a.APP_CREATEDATE, 'YYYY"년"MM"월"DD"일"') AS APP_CREATEDATE , p.PAY_REJECTREASON 
		FROM APPROVAL a 
		JOIN GIAN g ON g.GIAN_SEQ = a.GIAN_SEQ 
		JOIN PAYMENTLINE p ON p.APP_SEQ = a.APP_SEQ
		WHERE a.APP_DRAFT IN ('결재반려')
		AND p.PAY_SIGN = 'D' 
		AND p.PAY_USER =  #{user_id}
		ORDER BY p.PAY_ASIGNDATE DESC
   </select>
   
	<!-- 결재내역 단일 상세 조회 (클릭한 결재의 결재시퀀스 사용) -->
	<select id="getOneApproval" resultType="ApprovalVo" parameterType="java.lang.String">
		SELECT *
	        FROM APPROVAL a 
	        WHERE APP_SEQ = #{app_seq} 
	</select>	

	
	<!-- 결재 조건별검색 전체리스트 조회 (옵션태그에서 선택한 태그의 밸류 사용) -->
	<select id="conditionSearchApproval" resultType="ApprovalVo" parameterType="java.util.Map">
    SELECT APP_SEQ, APP_TITLE, APP_CONTENT,
           GIAN_SEQ, TO_CHAR(APP_CREATEDATE, 'YYYY/MM/DD') AS APP_CREATEDATE, APP_DRAFT
	    FROM APPROVAL
	   	 WHERE 1=1
	    <if test="title!=null">
	        AND APP_TITLE LIKE '%' || #{title} || '%'
	    </if>
	    <if test="name != null">
	    	AND APP_SEQ  IN (SELECT JS.APP_SEQ
			FROM USERINFO RIGHT JOIN (SELECT APP_SEQ ,JSON_VALUE(APP_PAYLINE, '$.writer') JT
										FROM APPROVAL) JS
			ON (JS.JT = USER_ID)
			WHERE USER_NAME LIKE '%' || #{name} || '%')
	    </if>
	    AND NOT(APP_DRAFT = '임시저장' OR APP_DRAFT = '결재취소')
	    ORDER BY APP_CREATEDATE DESC
	</select>



	<!-- 임시저장한 결재리스트 조회 (세션에서 나의 사원번호 사용) -->
	<select id="getTempApproval" parameterType="java.lang.String" resultType="ApprovalVo">
		SELECT p.APP_SEQ ,p.APP_TITLE ,p.APP_CONTENT ,g.GIAN_NAME  AS GIAN_SEQ ,  TO_CHAR(p.APP_CREATEDATE, 'YYYY"년"MM"월"DD"일"') AS APP_CREATEDATE
		FROM APPROVAL p
		JOIN GIAN g ON p.GIAN_SEQ = g.GIAN_SEQ
		WHERE p.USER_ID = #{user_id} AND p.APP_DRAFT = '임시저장'
		ORDER BY p.APP_CREATEDATE DESC
	</select>
	
	<!-- 임시저장된 결재 삭제 -->
	<delete id="tempDelete">
		DELETE  FROM APPROVAL WHERE APP_SEQ = #{app_seq}
	</delete>



	<!-- 날짜 지정에따른 결재 신청 (결재작성창 정보들 이용)-->
	<insert id="reqDynamicDateApproval" parameterType="ApprovalVo">
    INSERT INTO APPROVAL
        (APP_SEQ, APP_TITLE, APP_CONTENT,
        GIAN_SEQ, APP_STRDATE,
        APP_ENDDATE, USER_ID)
    VALUES('APPROVAL_' || TO_CHAR(APPROVAL_SEQ.NEXTVAL), #{app_title}, #{app_content},
        #{gian_seq}, 
        <choose>
            <!-- 만약 시작 날짜와 끝 날짜가 모두 존재하는 경우 -->
            <when test="app_strdate != null and app_enddate != null">
                TO_DATE( #{app_strdate}, 'YYYY-MM-DD HH24:MI:SS'),
                TO_DATE( #{app_enddate}, 'YYYY-MM-DD HH24:MI:SS'),
            </when>
            <!-- 만약 시작 날짜와 끝 날짜가 모두 존재하지 않는 경우 -->
            <otherwise>
                LOCALTIMESTAMP,  
                LOCALTIMESTAMP,
            </otherwise>
        </choose>
         #{user_id}
    )
	</insert>


	<!-- 결재파일 임시저장 (결재작성창 정보들 이용)-->
	<insert id="saveTempApproval" parameterType="ApprovalVo">
	INSERT INTO APPROVAL
		(APP_SEQ, APP_TITLE, APP_CONTENT,
		GIAN_SEQ, APP_DRAFT, USER_ID)
	VALUES('APPROVAL_' || TO_CHAR(APPROVAL_SEQ.NEXTVAL), #{app_title}, #{app_content},
			#{gian_seq}, '임시저장', #{user_id})
	</insert>
	
	
	
	<!-- 결재 수정하는 업데이트 문 -->
	<update id="fixReqApproval" parameterType="ApprovalVo">
		UPDATE APPROVAL 
		SET APP_TITLE = #{app_title}, 
			APP_CONTENT = #{app_content},
			<choose>
				<when test="app_draft == null">
					APP_DRAFT = '결재진행',
				</when>
				<otherwise>
					APP_DRAFT = '결재대기',
				</otherwise>
			</choose>
			APP_MODDATE =LOCALTIMESTAMP
		WHERE APP_SEQ = #{app_seq}
	</update>
	
	
	
	<!-- 승인시 쿼리 시작 -->
	<update id="approvePay" parameterType="ApprovalVo">
		UPDATE APPROVAL a
		SET 
		    APP_DRAFT = #{app_draft}
		WHERE 
		    APP_SEQ = #{app_seq}
	</update>
	
	<update id="approvePayLine" parameterType="ApprovalVo">
		UPDATE PAYMENTLINE
		SET 
		    PAY_SIGN = 'Y',
		    PAY_ASIGNDATE = LOCALTIMESTAMP 
		WHERE 
		    APP_SEQ = #{app_seq}
		    AND PAY_SIGN = 'N' AND PAY_NUM = #{pay_num}
	</update>
	
	<!-- 결재반려시 쿼리 실행 -->
	<update id="banRuApproval" parameterType="ApprovalVo">
	UPDATE APPROVAL 
	SET 
		APP_DRAFT  = '결재반려'
	WHERE APP_SEQ = #{app_seq}
	</update>
	
	<update id="banRuPayLine" parameterType="ApprovalVo">
	UPDATE PAYMENTLINE 
	SET 
	    PAY_SIGN = 'D' , 
	    PAY_ASIGNDATE = LOCALTIMESTAMP , 
	    PAY_REJECTREASON = #{pay_rejectreason}
	WHERE 
	    APP_SEQ = #{app_seq} 
	   	AND PAY_NUM = #{pay_num}
	   	AND PAY_USER = #{pay_user}
	</update>
	
	<update id="cancelApproval" parameterType="ApprovalVo">
	UPDATE APPROVAL SET APP_DRAFT ='결재취소'
                WHERE APP_SEQ = #{app_seq}	
	</update>
	
	<!-- 임시저장 페이징 테스트 -->
	<select id="selectTempCount" parameterType="ApprovalVo" resultType="java.lang.Integer">
		SELECT COUNT(*)
			FROM APPROVAL
			WHERE APP_DRAFT = '임시저장' AND  USER_ID = #{user_id, jdbcType=VARCHAR}
	</select>
	
	<select id="selectTempPage" parameterType="java.util.Map" resultType="ApprovalVo">
	SELECT *  
	FROM (
	    SELECT 
	        p.APP_SEQ,
	        p.APP_TITLE,
	        p.APP_CONTENT,
	        g.GIAN_NAME AS GIAN_SEQ,
	        TO_CHAR(p.APP_CREATEDATE, 'YYYY"년"MM"월"DD"일"') AS APP_CREATEDATE,
	        ROW_NUMBER() OVER (ORDER BY p.APP_CREATEDATE DESC) AS rn
	    FROM APPROVAL p
	    JOIN GIAN g ON p.GIAN_SEQ = g.GIAN_SEQ
	    WHERE USER_ID = #{user_id} AND APP_DRAFT = '임시저장'
	) 
	WHERE rn BETWEEN #{first} AND #{last} 
	</select>
	
</mapper>