<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.clip.gwr.model.mapper.ReservationDaoImpl">
	
	<!-- 나의 예약 정보 전체 조회 -->
	<select id="myReservationAll" parameterType="java.lang.String" resultType="ReservationVo">
		SELECT RE_SEQ , USER_ID ,RE_TITLE, RE_CONTENT , RE_START , RE_END , RE_CREATE, ME_ROOM
		FROM RESERVATION r
		WHERE  RE_DELFLAG = 'N' AND (
								      RE_START BETWEEN TO_DATE('2024-03-01', 'YYYY-MM-DD') AND TO_DATE('2024-03-29', 'YYYY-MM-DD')
								      OR RE_END BETWEEN TO_DATE('2024-03-01', 'YYYY-MM-DD') AND TO_DATE('2024-03-31', 'YYYY-MM-DD')
								   ) AND USER_ID = #{user_id}
		ORDER BY RE_SEQ
 	</select>
 	
 	<!-- 내가 참석한 회의 정보 조회 -->
 	<select id="myAttReservationAll" parameterType="java.lang.String" resultType="ReservationVo">
 		SELECT r.RE_SEQ, r.USER_ID, r.RE_CONTENT, r.RE_START, r.RE_END, r.RE_CREATE, r.ME_ROOM
			FROM RESERVATION r
			JOIN ATTENDS a ON r.RE_SEQ = a.RE_SEQ
			WHERE a.USER_ID = #{user_id}
 	</select>
 	
 	<!-- 예약 등록 -->
 	<insert id="myReservationInsert" parameterType="java.util.Map">
	    INSERT INTO RESERVATION(RE_SEQ, USER_ID, RE_TITLE, 
	                        	RE_CONTENT, RE_START, RE_END, 
	                        	RE_CREATE, ME_ROOM)
			VALUES(RESERVATION_SEQ.NEXTVAL, #{user_id}, #{re_title},
					#{re_content},
	        		TO_DATE(#{re_start}, 'YYYY-MM-DD HH24:MI'),
	        		TO_DATE(#{re_start}, 'YYYY-MM-DD HH24:MI') + INTERVAL '1' HOUR, 
	        		TO_DATE(SYSDATE, 'YYYY-MM-DD HH24:MI'), 3)
	</insert>
	
	<!-- 회의실 리스트 -->
	<select id="selectMeetingRoom" resultType="MeeTingRoomVo">
		SELECT ME_ROOM, ME_ATTEND  
			FROM MEETINGROOM
	</select>
	
	<!-- 회의실 가능 시간 -->
	<select id="selectPossibleMeRoom" parameterType="java.util.Map" resultType="java.lang.String" >
		SELECT TO_DATE(#{re_start}||' 09:00:00', 'YYYY-MM-DD HH24:MI:SS') + (LEVEL - 1)/ 24 AS RE_TIME
			FROM DUAL
			CONNECT BY TO_DATE(#{re_start}||' 09:00:00', 'YYYY-MM-DD HH24:MI:SS') + (LEVEL - 1)/ 24 &lt; TO_DATE(#{re_start}||' 17:00:00', 'YYYY-MM-DD HH24:MI:SS')
			MINUS SELECT RE_START
			FROM RESERVATION
			WHERE ME_ROOM = #{me_room}
			AND RE_START BETWEEN TO_DATE(#{re_start}||' 09:00:00', 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(#{re_start}||' 17:00:00', 'YYYY-MM-DD HH24:MI:SS')
	</select>
	
	<!-- 참석자 jstree -->
	<select id="selectAttendsJstree" resultType="UserinfoVo">
		SELECT U.USER_ID, U.USER_NAME, U.DEPT_SEQ, R.RANKS_NAME
		FROM USERINFO U
		INNER JOIN RANKS R ON U.RANKS_SEQ = R.RANKS_SEQ
		WHERE USER_STATUS = 'Y' AND U.DEPT_SEQ IS NOT NULL 
		ORDER BY R.RANKS_SEQ ASC
	</select>
	
	<!-- 예약 상세조회 -->
	<select id="reDetail" parameterType="java.lang.Integer" resultType="ReservationVo">
		SELECT RE_SEQ ,USER_ID , RE_TITLE , RE_CONTENT , RE_START , RE_END, RE_CREATE ,RE_DELFLAG ,ME_ROOM 
		   	FROM RESERVATION
		   	WHERE RE_SEQ = #{re_seq}
		   	AND RE_DELFLAG ='N'
	</select>
	
	<!-- 회의실별 참석자 명단 조회 -->
	<select id="reAttList" parameterType="java.lang.Integer" resultType="ReAttendsVo">
		SELECT u.USER_NAME,r.RANKS_NAME
			FROM ATTENDS a
			JOIN USERINFO u ON a.USER_ID=u.USER_ID  
			JOIN RANKS r ON r.RANKS_SEQ = u.RANKS_SEQ 
			WHERE RE_SEQ = #{re_seq}
	</select>
	
	<!-- 예약테이블 내용 수정하기 -->
	<update id="reModifyRev">
		UPDATE RESERVATION
			SET RE_TITLE=#{re_title}, RE_CONTENT=#{re_content}, RE_START = TO_DATE({re_start}, 'YYYY-MM-DD"T"HH24:MI:SS'), RE_END = TO_DATE({re_start}, 'YYYY-MM-DD"T"HH24:MI:SS')+ INTERVAL '1' HOUR, RE_CREATE = SYSDATE, ME_ROOM=#{me_room}
			WHERE RE_SEQ=#{re_seq}
	</update>
	
	<!-- 참석자 명단 수정하기 -->
	<delete id="reModifyAtt">
	DELETE FROM ATTENDS a 
  		WHERE USER_ID = #{user_id}
	</delete>
	
	<!-- 예약 취소하기 -->
	<update id="reDel">
		UPDATE RESERVATION
			SET RE_DELFLAG='Y' 
			WHERE RE_SEQ = #{re_seq}
	</update>
	
	
	
	
	
</mapper>
