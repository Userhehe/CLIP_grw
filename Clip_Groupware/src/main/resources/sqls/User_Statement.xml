<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.clip.gwr.model.mapper.UserDaoImpl">
	<!-- 로그인 -->
	<select id="userLogin" parameterType="java.util.Map" resultType="com.clip.gwr.vo.UserVo">
		SELECT USER_ID, USER_PASSWORD
			FROM USERINFO u 
		WHERE USER_ID = #{user_id}
		AND USER_PASSWORD = #{user_password}
		AND USER_STATUS = 'Y'
	</select>
	
	<!-- 아이디찾기 -->
	<select id="findUserId" parameterType="java.util.Map" resultType="com.clip.gwr.vo.UserVo">
		SELECT USER_ID
			FROM USERINFO u 
		WHERE USER_EMAIL = #{user_email}
		AND USER_STATUS = 'Y'
	</select>
	
	<!-- 비밀번호 재설정 -->
	<update id="updateUserPassword" parameterType="java.util.Map">
		UPDATE USERINFO
			SET USER_PASSWORD=#{user_password}
		WHERE USER_ID = (SELECT USER_ID FROM USERINFO u WHERE USER_EMAIL = #{user_email})
		AND USER_STATUS = 'Y'
	</update>
	
	<!-- 인증번호 저장 -->
	<update id="updateUserCertnum" parameterType="java.util.Map">
		UPDATE USERINFO
			SET USER_CERTNUM = #{user_certnum}
		WHERE USER_ID = (SELECT USER_ID FROM USERINFO u WHERE USER_EMAIL = #{user_email})
		AND USER_STATUS = 'Y'
	</update>
	
	<!-- 인증번호 확인 -->
	<select id="comparisonCertNum" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT COUNT(*)
			FROM USERINFO u
		WHERE USER_CERTNUM = #{user_certnum}
		AND USER_ID = (SELECT USER_ID FROM USERINFO u WHERE USER_EMAIL = #{user_email})
		AND USER_STATUS = 'Y'
	</select>
	
	<!-- 사원정보 등록 -->
	<insert id="insertUserinfo" parameterType="java.util.Map">
		<selectKey keyProperty="user_seq" resultType="java.lang.Integer" order="BEFORE">
			SELECT USER_SEQ.NEXTVAL AS USER_SEQ FROM DUAL
		</selectKey>
		INSERT INTO USERINFO
			(USER_ID, USER_NAME, USER_REGISTNUM, 
			USER_PHONENUM, USER_EMAIL, USER_BIRTHDAY, 
			USER_ADDRESS, RANKS_SEQ, DEPT_SEQ, 
			POSITIONS_SEQ, USER_CERTNUM, 
			USER_REGDATE)
			VALUES('USER_' || TO_CHAR(USER_SEQ.NEXTVAL, 'FM000'), #{user_name}, #{user_registnum},
			#{user_phonenum}, #{user_email}, #{user_birthday}, 
			#{user_address},
			(SELECT RANKS_SEQ FROM RANKS WHERE RANKS_NAME = #{ranks_name}),
			(SELECT DEPT_SEQ FROM DEPT WHERE DEPT_NAME = #{dept_name}),
			(SELECT POSITIONS_SEQ FROM POSITIONS WHERE POSITIONS_NAME = #{positions_name}),
			0, TO_CHAR(CURRENT_DATE, 'YYYY-MM-DD'))
	</insert>
	
	<!-- 이메일&연락처 중복체크 -->
	<select id="duplicateCheckUserinfo" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT COUNT(*)
			FROM USERINFO u
		WHERE USER_STATUS = 'Y' 
		<if test="user_email != null">
			AND USER_EMAIL = #{user_email}
		</if>
		<if test="user_phonenum != null">
			AND USER_PHONENUM = #{user_phonenum}
		</if>
	</select>
	
	<!-- 사원목록 전체조회 -->
	<select id="selectUserinfoList" resultType="com.clip.gwr.vo.UserinfoVo">
		SELECT U.USER_ID, U.USER_NAME, R.RANKS_NAME, 
	        D.DEPT_NAME, PO.POSITIONS_NAME, U.PHOTO_SEQ,
	        U.USER_AUTH, U.USER_REGDATE
		FROM USERINFO U
		INNER JOIN RANKS R ON U.RANKS_SEQ = R.RANKS_SEQ
		INNER JOIN DEPT D ON U.DEPT_SEQ = D.DEPT_SEQ
		INNER JOIN POSITIONS PO ON U.POSITIONS_SEQ = PO.POSITIONS_SEQ
		WHERE USER_STATUS = 'Y' 
		ORDER BY USER_REGDATE DESC
	</select>
	
	<!-- 사원목록 검색 -->
	<select id="searchUserinfoList" parameterType="java.util.Map" resultType="com.clip.gwr.vo.UserinfoVo">
		SELECT U.USER_ID, U.USER_NAME, R.RANKS_NAME, 
        D.DEPT_SEQ, PO.POSITIONS_SEQ, U.PHOTO_SEQ,
        D.DEPT_NAME, PO.POSITIONS_NAME, R.RANKS_SEQ,
        U.USER_AUTH, U.USER_REGDATE
			FROM USERINFO U
		INNER JOIN RANKS R ON U.RANKS_SEQ = R.RANKS_SEQ
		INNER JOIN DEPT D ON U.DEPT_SEQ = D.DEPT_SEQ
		INNER JOIN POSITIONS PO ON U.POSITIONS_SEQ = PO.POSITIONS_SEQ
		WHERE USER_STATUS = 'Y'
		<if test="user_id != null">
			AND U.USER_ID LIKE '%' || #{user_id} || '%'
		</if>
		<if test="user_name != null">
			AND U.USER_NAME LIKE '%' || #{user_name} || '%'
		</if>
		<if test="ranks_name != null">
			AND R.RANKS_NAME = #{ranks_name}
		</if>
		<if test="dept_name != null">
			AND D.DEPT_NAME = #{dept_name}
		</if>
		<if test="positions_name != null">
			AND PO.POSITIONS_NAME = #{positions_name}
		</if>
		<if test="start_regdate != null and end_regdate != null">
			AND U.USER_REGDATE BETWEEN TO_DATE(#{start_regdate}, 'YYYY-MM-DD') 
			AND TO_DATE(#{end_regdate}, 'YYYY-MM-DD')
		</if>
		ORDER BY USER_REGDATE DESC
	</select>
	
	<!-- 사원정보 상세조회 -->
	<select id="selectUserinfoDetail" parameterType="java.util.Map" resultType="com.clip.gwr.vo.UserinfoVo">
		SELECT U.USER_ID, U.USER_NAME, U.USER_REGISTNUM,
                U.USER_PHONENUM, U.USER_EMAIL, U.USER_BIRTHDAY,
                U.USER_ADDRESS, R.RANKS_SEQ, D.DEPT_SEQ,
                PO.POSITIONS_SEQ, R.RANKS_NAME, D.DEPT_NAME, 
                PO.POSITIONS_NAME, U.PHOTO_SEQ, U.USER_AUTH, 
                USER_STATUS, U.USER_REGDATE
			FROM USERINFO U
		INNER JOIN RANKS R ON U.RANKS_SEQ = R.RANKS_SEQ
		INNER JOIN DEPT D ON U.DEPT_SEQ = D.DEPT_SEQ
		INNER JOIN POSITIONS PO ON U.POSITIONS_SEQ = PO.POSITIONS_SEQ
		WHERE USER_STATUS = 'Y'
		AND U.USER_ID = #{user_id}
	</select>
	
	<!-- 사원정보 수정 -->
	<update id="updateUserinfo" parameterType="java.util.Map">
		UPDATE USERINFO
			SET USER_NAME = #{user_name}, USER_REGISTNUM = #{user_registnum}, USER_PHONENUM = #{user_phonenum}, 
			USER_EMAIL = #{user_email}, USER_BIRTHDAY = #{user_birthday}, USER_ADDRESS = #{user_address},
			RANKS_SEQ = (SELECT RANKS_SEQ FROM RANKS r WHERE RANKS_NAME = #{ranks_name}), 
			DEPT_SEQ = (SELECT DEPT_SEQ FROM DEPT d WHERE DEPT_NAME = #{dept_name}), 
			POSITIONS_SEQ = (SELECT POSITIONS_SEQ FROM POSITIONS p WHERE POSITIONS_NAME = #{positions_name}), 
			USER_AUTH = #{user_auth} , USER_STATUS = #{user_status}
		WHERE USER_ID = #{user_id}
	</update>
	
	<!-- 재직증명서 다운로드 -->
	<select id="selectJejicDownload" parameterType="java.util.Map" resultType="com.clip.gwr.vo.UserinfoVo">
		SELECT U.USER_NAME, U.USER_REGISTNUM, U.USER_BIRTHDAY, 
		U.USER_ADDRESS, U.USER_REGDATE, R.RANKS_NAME,
		(SELECT USER_NAME FROM USERINFO WHERE RANKS_SEQ = 'RANKS_001') AS BOSS_NAME, 
		TO_CHAR(CURRENT_DATE, 'YYYY-MM-DD') AS TODAY
			FROM USERINFO u 
		INNER JOIN RANKS R ON U.RANKS_SEQ = R.RANKS_SEQ
		WHERE USER_ID = #{user_id}
	</select>
</mapper>
