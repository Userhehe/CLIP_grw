<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.clip.gwr.model.mapper.UserDaoImpl">
	<!-- 로그인 --> 
	<select id="userLogin" parameterType="java.lang.String" resultType="com.clip.gwr.vo.UserinfoVo">
		SELECT USER_ID, USER_PASSWORD, USER_NAME, USER_AUTH, USER_STATUS, RANKS_SEQ, DEPT_SEQ, POSITIONS_SEQ,
		(SELECT RANKS_NAME FROM RANKS r INNER JOIN USERINFO u ON r.RANKS_SEQ = u.RANKS_SEQ WHERE u.USER_ID = #{username}) AS RANKS_NAME,
		(SELECT DEPT_NAME FROM DEPT d INNER JOIN USERINFO u ON d.DEPT_SEQ = u.DEPT_SEQ WHERE USER_ID = #{username}) AS DEPT_NAME,
		(SELECT POSITIONS_NAME FROM POSITIONS p INNER JOIN USERINFO u ON p.POSITIONS_SEQ = u.POSITIONS_SEQ WHERE USER_ID = #{username}) AS POSITIONS_NAME
			FROM USERINFO u 
		WHERE USER_ID = #{username}
		AND USER_STATUS = 'Y'
	</select>
	
	<!-- 아이디찾기 -->
	<select id="findUserId" parameterType="java.lang.String" resultType="com.clip.gwr.vo.UserVo">
		SELECT USER_ID
			FROM USERINFO u 
		WHERE USER_EMAIL = #{user_email}
		AND USER_STATUS = 'Y'
	</select>
	
	<!-- 비밀번호 재설정 -->
	<update id="updateUserPassword" parameterType="java.util.Map">
		UPDATE USERINFO
			SET USER_PASSWORD= #{password}
		WHERE USER_ID = #{user_id}
		AND USER_STATUS = 'Y'
	</update>
	
	<!-- 비밀번호 재설정 이메일 찾기 -->
	<select id="findUserEmail" parameterType="java.lang.String" resultType="com.clip.gwr.vo.UserVo">
		SELECT USER_EMAIL
			FROM USERINFO u
		WHERE USER_ID = #{user_id}
	</select>
	
	<!-- 사원정보 등록 -->
	<insert id="insertUserinfo" parameterType="java.util.Map">
		<selectKey keyProperty="user_seq" resultType="java.lang.Integer" order="BEFORE">
			SELECT USER_SEQ.NEXTVAL AS USER_SEQ FROM DUAL
		</selectKey>
		INSERT INTO USERINFO
			(USER_ID, USER_PASSWORD, USER_NAME, USER_REGISTNUM, 
			USER_PHONENUM, USER_EMAIL, USER_BIRTHDAY, 
			USER_ADDRESS, RANKS_SEQ, DEPT_SEQ, 
			POSITIONS_SEQ, USER_REGDATE)
			VALUES('USER_' || TO_CHAR(USER_SEQ.NEXTVAL), #{user_password}, #{user_name}, 
			#{user_registnum}, #{user_phonenum}, #{user_email}, 
			#{user_birthday}, #{user_address},
			(SELECT RANKS_SEQ FROM RANKS WHERE RANKS_NAME = #{ranks_name}),
			(SELECT DEPT_SEQ FROM DEPT WHERE DEPT_NAME = #{dept_name}),
			(SELECT POSITIONS_SEQ FROM POSITIONS WHERE POSITIONS_NAME = #{positions_name}),
			TO_DATE(#{user_regdate}, 'YYYY-MM-DD'))
	</insert>
	
	<!-- 이메일 중복체크 -->
	<select id="duplicateCheckEmail" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT COUNT(*)
			FROM USERINFO u 
		WHERE USER_EMAIL = #{user_email}
	</select>
	
	<!-- 사원목록 전체조회 -->
	<select id="selectUserinfoList" parameterType="java.util.Map" resultType="com.clip.gwr.vo.UserinfoVo">
		SELECT USER_ID, USER_NAME, RANKS_NAME, 
		       DEPT_NAME, POSITIONS_NAME, PHOTO_SEQ,
		       USER_AUTH, USER_STATUS, USER_REGDATE
			FROM (
		    	SELECT U.USER_ID, U.USER_NAME, R.RANKS_NAME, 
			           D.DEPT_NAME, PO.POSITIONS_NAME, U.PHOTO_SEQ,
			           U.USER_AUTH, U.USER_STATUS, TO_CHAR(U.USER_REGDATE, 'YYYY-MM-DD') AS USER_REGDATE,
			           ROW_NUMBER() OVER (ORDER BY U.USER_REGDATE DESC) AS RN
				    FROM USERINFO U
				    INNER JOIN RANKS R ON U.RANKS_SEQ = R.RANKS_SEQ
				    INNER JOIN DEPT D ON U.DEPT_SEQ = D.DEPT_SEQ
				    INNER JOIN POSITIONS PO ON U.POSITIONS_SEQ = PO.POSITIONS_SEQ
				    WHERE USER_STATUS = 'Y'
				)
				WHERE RN BETWEEN #{first} AND #{last}
				ORDER BY USER_REGDATE DESC
	</select>
	
	<!-- 사원목록 검색 -->
	<select id="searchUserinfoList" parameterType="java.util.Map" resultType="com.clip.gwr.vo.UserinfoVo">
<!-- 		SELECT U.USER_ID, U.USER_NAME, R.RANKS_NAME,  -->
<!--         D.DEPT_SEQ, PO.POSITIONS_SEQ, U.PHOTO_SEQ, -->
<!--         D.DEPT_NAME, PO.POSITIONS_NAME, R.RANKS_SEQ, -->
<!--         U.USER_AUTH, TO_CHAR(U.USER_REGDATE, 'YYYY-MM-DD') AS USER_REGDATE -->
<!-- 			FROM USERINFO U -->
<!-- 		INNER JOIN RANKS R ON U.RANKS_SEQ = R.RANKS_SEQ -->
<!-- 		INNER JOIN DEPT D ON U.DEPT_SEQ = D.DEPT_SEQ -->
<!-- 		INNER JOIN POSITIONS PO ON U.POSITIONS_SEQ = PO.POSITIONS_SEQ -->
<!-- 		WHERE 1=1 -->
<!-- 		<if test="user_name != null and user_name != ''"> -->
<!-- 			AND U.USER_NAME LIKE '%' || #{user_name} || '%' -->
<!-- 		</if> -->
<!-- 		<if test="ranks_name != null and ranks_name != ''"> -->
<!-- 			AND R.RANKS_NAME = #{ranks_name} -->
<!-- 		</if> -->
<!-- 		<if test="dept_name != null and dept_name != ''"> -->
<!-- 			AND D.DEPT_NAME = #{dept_name} -->
<!-- 		</if> -->
<!-- 		<if test="positions_name != null and positions_name != ''"> -->
<!-- 			AND PO.POSITIONS_NAME = #{positions_name} -->
<!-- 		</if> -->
<!-- 		<if test="user_status != null and user_status != ''"> -->
<!-- 			AND U.USER_STATUS = #{user_status} -->
<!-- 		</if> -->
<!-- 		<if test="start_regdate != null and end_regdate != null and start_regdate != '' and end_regdate != ''"> -->
<!-- 			AND U.USER_REGDATE BETWEEN TO_DATE(#{start_regdate}, 'YYYY-MM-DD')  -->
<!-- 			AND TO_DATE(#{end_regdate}, 'YYYY-MM-DD') -->
<!-- 		</if> -->
<!-- 		ORDER BY USER_REGDATE DESC -->
			SELECT * 
			FROM (
			SELECT U.USER_ID, U.USER_NAME, R.RANKS_NAME, 
		        D.DEPT_SEQ, PO.POSITIONS_SEQ, U.PHOTO_SEQ,
		        D.DEPT_NAME, PO.POSITIONS_NAME, R.RANKS_SEQ,
		        U.USER_AUTH, TO_CHAR(U.USER_REGDATE, 'YYYY-MM-DD') AS USER_REGDATE,
		        ROW_NUMBER() OVER (ORDER BY USER_REGDATE DESC) AS rn
					FROM USERINFO U
				INNER JOIN RANKS R ON U.RANKS_SEQ = R.RANKS_SEQ
				INNER JOIN DEPT D ON U.DEPT_SEQ = D.DEPT_SEQ
				INNER JOIN POSITIONS PO ON U.POSITIONS_SEQ = PO.POSITIONS_SEQ
				WHERE 1=1
				<if test="user_name != null and user_name != ''">
					AND U.USER_NAME LIKE '%' || #{user_name} || '%'
				</if>
				<if test="ranks_name != null and ranks_name != ''">
					AND R.RANKS_NAME = #{ranks_name}
				</if>
				<if test="dept_name != null and dept_name != ''">
					AND D.DEPT_NAME = #{dept_name}
				</if>
				<if test="positions_name != null and positions_name != ''">
					AND PO.POSITIONS_NAME = #{positions_name}
				</if>
				<if test="user_status != null and user_status != ''">
					AND U.USER_STATUS = #{user_status}
				</if>
				<if test="start_regdate != null and end_regdate != null and start_regdate != '' and end_regdate != ''">
					AND U.USER_REGDATE BETWEEN TO_DATE(#{start_regdate}, 'YYYY-MM-DD') 
					AND TO_DATE(#{end_regdate}, 'YYYY-MM-DD')
				</if>
				)
				WHERE rn BETWEEN #{first} AND #{last}
				ORDER BY USER_REGDATE DESC
	</select>
	
	<!-- 사원정보 상세조회 -->
	<select id="selectUserinfoDetail" parameterType="java.lang.String" resultType="com.clip.gwr.vo.UserinfoVo">
		SELECT U.USER_ID, U.USER_NAME, U.USER_REGISTNUM,
                U.USER_PHONENUM, U.USER_EMAIL, TO_CHAR(U.USER_BIRTHDAY, 'YYYY-MM-DD') AS USER_BIRTHDAY,
                U.USER_ADDRESS, R.RANKS_SEQ, D.DEPT_SEQ,
                PO.POSITIONS_SEQ, R.RANKS_NAME, D.DEPT_NAME, 
                PO.POSITIONS_NAME, U.PHOTO_SEQ, U.USER_AUTH, 
                USER_STATUS, TO_CHAR(U.USER_REGDATE, 'YYYY-MM-DD') AS USER_REGDATE
			FROM USERINFO U
		INNER JOIN RANKS R ON U.RANKS_SEQ = R.RANKS_SEQ
		INNER JOIN DEPT D ON U.DEPT_SEQ = D.DEPT_SEQ
		INNER JOIN POSITIONS PO ON U.POSITIONS_SEQ = PO.POSITIONS_SEQ
		WHERE 1=1
		AND U.USER_ID = #{user_id}
	</select>
	
	<!-- 사원정보 수정 -->
	<update id="updateUserinfo" parameterType="java.util.Map">
		UPDATE USERINFO
			SET USER_NAME = #{user_name}, USER_REGISTNUM = #{user_registnum}, USER_PHONENUM = #{user_phonenum}, 
			USER_EMAIL = #{user_email}, USER_BIRTHDAY = #{user_birthday}, USER_ADDRESS = #{user_address},
			RANKS_SEQ = (SELECT RANKS_SEQ FROM RANKS r WHERE RANKS_NAME = #{ranks_name}), 
			DEPT_SEQ = (SELECT DEPT_SEQ FROM DEPT d WHERE DEPT_NAME = #{dept_name}), 
			POSITIONS_SEQ = (SELECT POSITIONS_SEQ FROM POSITIONS p WHERE POSITIONS_NAME = #{positions_name}), 
			USER_AUTH = #{user_auth} , USER_STATUS = #{user_status}, USER_REGDATE = TO_DATE(#{user_regdate}, 'YYYY-MM-DD')
		WHERE USER_ID = #{user_id}
	</update>
	
	<!-- 재직증명서 다운로드 -->
	<select id="selectJejicDownload" parameterType="java.lang.String" resultType="com.clip.gwr.vo.UserinfoVo">
		SELECT u.USER_NAME, u.USER_REGISTNUM, TO_CHAR(u.USER_BIRTHDAY, 'YYYY-MM-DD') AS USER_BIRTHDAY, 
		u.USER_ADDRESS, TO_CHAR(u.USER_REGDATE, 'YYYY-MM-DD') AS USER_REGDATE,
		d.DEPT_NAME, p.POSITIONS_NAME, r.RANKS_NAME,
		(SELECT USER_NAME FROM USERINFO WHERE RANKS_SEQ = 'RANKS_1') AS BOSS_NAME, 
		TO_CHAR(CURRENT_DATE, 'YYYY-MM-DD') AS TODAY
			FROM USERINFO u 
		INNER JOIN DEPT d ON u.DEPT_SEQ = d.DEPT_SEQ
		INNER JOIN POSITIONS p ON u.POSITIONS_SEQ = p.POSITIONS_SEQ
		INNER JOIN RANKS r ON u.RANKS_SEQ = r.RANKS_SEQ
		WHERE USER_ID = #{user_id}
	</select>
	
	<!-- 사용자 권한조회 -->
	<select id="selectUserAuth" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT USER_AUTH 
			FROM USERINFO u 
			WHERE user_id = #{user_id}
	</select>
	
	<!-- 사용자 수 카운트 -->
	<select id="selectUserInfoListCnt" resultType="java.lang.Integer">
		SELECT COUNT(*)
			FROM USERINFO
			WHERE USER_STATUS = 'Y'
	</select>
	
	<!-- 사용자 검색 결과 수 카운트 -->
	<select id="selectSearchUserInfoListCnt" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT COUNT(*)
			FROM USERINFO U
		INNER JOIN RANKS R ON U.RANKS_SEQ = R.RANKS_SEQ
		INNER JOIN DEPT D ON U.DEPT_SEQ = D.DEPT_SEQ
		INNER JOIN POSITIONS PO ON U.POSITIONS_SEQ = PO.POSITIONS_SEQ
		WHERE 1=1
		<if test="user_name != null and user_name != ''">
			AND U.USER_NAME LIKE '%' || #{user_name} || '%'
		</if>
		<if test="ranks_name != null and ranks_name != ''">
			AND R.RANKS_NAME = #{ranks_name}
		</if>
		<if test="dept_name != null and dept_name != ''">
			AND D.DEPT_NAME = #{dept_name}
		</if>
		<if test="positions_name != null and positions_name != ''">
			AND PO.POSITIONS_NAME = #{positions_name}
		</if>
		<if test="user_status != null and user_status != ''">
			AND U.USER_STATUS = #{user_status}
		</if>
		<if test="start_regdate != null and end_regdate != null and start_regdate != '' and end_regdate != ''">
			AND U.USER_REGDATE BETWEEN TO_DATE(#{start_regdate}, 'YYYY-MM-DD') 
			AND TO_DATE(#{end_regdate}, 'YYYY-MM-DD')
		</if>
		ORDER BY USER_REGDATE DESC
	</select>
</mapper>
